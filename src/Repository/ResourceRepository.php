<?php

namespace App\Repository;

use App\Entity\Resource;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * @method Resource|null find($id, $lockMode = null, $lockVersion = null)
 * @method Resource|null findOneBy(array $criteria, array $orderBy = null)
 * @method Resource[]    findAll()
 * @method Resource[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class ResourceRepository extends ServiceEntityRepository
{
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, Resource::class);
    }

    public function findOriginalResources($item)
    {

        return $this->createQueryBuilder('r')
            ->andWhere('r.item = :item')
            ->setParameter('item', $item)
            ->andWhere('r.gid = r.id')
            ->orderBy('r.id', 'ASC')
            ->getQuery()
            ->getResult()
        ;
    }

    public function getNestedResourcesByParent($node)
    {
      $queryBuilder = $this->createQueryBuilder('r');
      $queryBuilder->leftJoin('r.item', 'item')
       ->leftJoin('item.node', 'parent2')
       ->leftJoin('parent2.parent', 'parent3')
       ->leftJoin('parent3.parent', 'parent4')
       ->leftJoin('parent4.parent', 'parent5')
       ->leftJoin('parent5.parent', 'parent6')
       ->where('r.autogenerated = 0')
       ->andWhere('item.id = :pcode')
       ->orWhere('parent2.id = :pcode')
       ->orWhere('parent3.id = :pcode')
       ->orWhere('parent4.id = :pcode')
       ->orWhere('parent5.id = :pcode')
       ->orWhere('parent6.id = :pcode')
       ->setParameter('pcode', $node);
      return $queryBuilder->setMaxResults(1500)->getQuery()->getResult();

    }

//    /**
//     * @return Resource[] Returns an array of Resource objects
//     */
    /*
    public function findByExampleField($value)
    {
        return $this->createQueryBuilder('r')
            ->andWhere('r.exampleField = :val')
            ->setParameter('val', $value)
            ->orderBy('r.id', 'ASC')
            ->setMaxResults(10)
            ->getQuery()
            ->getResult()
        ;
    }
    */

    /*
    public function findOneBySomeField($value): ?Resource
    {
        return $this->createQueryBuilder('r')
            ->andWhere('r.exampleField = :val')
            ->setParameter('val', $value)
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }
    */
}
