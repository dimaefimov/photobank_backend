<?php

namespace App\EventSubscriber;

use Symfony\Component\EventDispatcher\EventSubscriberInterface;
use App\PhotoBank\FileUploaderBundle\Event\FileUploadedEvent;
use App\PhotoBank\FileUploaderBundle\Service\UploadRecordManager;
use App\Service\ResourceService;
use Symfony\Component\Translation\TranslatorInterface;

class FileUploaderSubscriber implements EventSubscriberInterface
{
  private $resourceService;

  public function __construct(ResourceService $resourceService){
    $this->resourceService = $resourceService;
  }

  public static function getSubscribedEvents()
  {
    return array(
     'fileuploader.uploaded' => array('processUpload',0),
    );
  }
  public function processUpload(FileUploadedEvent $event)
  {
    $resourceParameters = [
      'item_id' => $event->getParams()['item_id'],
      'extension' => $event->getParams()['extension'],
      'path' => $event->getParams()['path'],
      'type' => $event->getParams()['type'],
      'username' => $event->getParams()['username'],
      'filesize' => $event->getParams()['filesize'],
      'preset' => $event->getParams()['preset'],
      'chunkPath' => $event->getParams()['chunkPath'],
      'filename' => $event->getParams()['filename'],
      'src_filename' => $event->getParams()['src_filename'],
      'gid' => $event->getParams()['gid'],
      'autogenerated'=>$event->getParams()['autogenerated']
    ];
    $this->resourceService->processCompletedUpload($resourceParameters);
  }
}
